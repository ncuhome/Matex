name: Development/Test

on:
  push:
    branches:
      - 'master'
      - 'main'
      - 'refactor/**'


jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ macos-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: install dependencies
        run: |
          echo start install dependencies
          npm config set scripts-prepend-node-path true
          yarn install --network-timeout 100000

      - name: upload zip
        run: |
          echo 注入更新服务器地址
          yarn injection ${{ secrets.SERVER }}

      - name: build main and preload
        run: |
          echo build main and preload
          yarn build:main_preload

      - name: build react
        run: |
          echo build react
          yarn build:react

      - name: Package Electron app
        run: |
          echo Package Electron app
          yarn release

      - name: upload zip
        run: |
          echo upload zip
          yarn uploadZip

#      - name: upload zip
#        if: ${{ matrix.os == 'macos-latest' }}
#        uses: easingthemes/ssh-deploy@main
#        env:
#          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
#          ARGS: "-rltgoDzvO --delete"
#          SOURCE: "release/build/zip/"
#          REMOTE_HOST: ${{ secrets.SSH_HOST }}
#          REMOTE_USER: ${{ secrets.SSH_USERNAME }}
#          TARGET: ${{ secrets.SSH_TARGET }}
##          EXCLUDE: "/dist/, /node_modules/"


